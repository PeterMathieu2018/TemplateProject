// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.1.0.0
//      SpecFlow Generator Version:2.0.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace TemplateProject.WebTests.Features
{
    using TechTalk.SpecFlow;


    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.1.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class InventoryManagementDononrSuppliesFeature
    {

        private static TechTalk.SpecFlow.ITestRunner testRunner;

#line 1 "InventoryManagementDonorSupplies.feature"
#line hidden

        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner(null, 0);
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "InventoryManagementDononrSupplies", "\tIn order to manage Donor Suppliese\r\n\tAs a milk Bank User\r\n\tI want to be able to " +
                    "add, edit, and delete supplies", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }

        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }

        [Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()]
        public virtual void TestInitialize()
        {
            if (((testRunner.FeatureContext != null)
                        && (testRunner.FeatureContext.FeatureInfo.Title != "InventoryManagementDononrSupplies")))
            {
                TemplateProject.WebTests.Features.InventoryManagementDononrSuppliesFeature.FeatureSetup(null);
            }
        }

        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }

        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }

        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }

        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("5.6.1 User has the ability to add new supply record")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "InventoryManagementDononrSupplies")]
        public virtual void _5_6_1UserHasTheAbilityToAddNewSupplyRecord()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("5.6.1 User has the ability to add new supply record", ((string[])(null)));
#line 6
            this.ScenarioSetup(scenarioInfo);
#line 7
            testRunner.Given("Username MbtsMbTester1 logged in with password Prolacta99", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 8
            testRunner.When("user navigates to supplies", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 9
            testRunner.And("element with id btnAddSupplies is clicked", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 10
            testRunner.And("text TestItem entered in ItemName", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 11
            testRunner.And("text 0122334444 entered in SupplyPartNumber", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 12
            testRunner.And("text 0122334444 entered in ProlactaPartNumber", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 13
            testRunner.And("element with class k-grid-update is clicked", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 14
            testRunner.Then("the 1 column in 1 row in Supplies grid should be TestItem", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 15
            testRunner.Then("the 2 column in 1 row in Supplies grid should be 0122334444", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 16
            testRunner.Then("the 3 column in 1 row in Supplies grid should be 0122334444", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 17
            testRunner.When("element with class k-grid-delete clicked in Supplies grid with row containing tex" +
                               "t TestItem", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 18
            testRunner.Then("the alert text should be Are you sure you want to delete this record?", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 19
            testRunner.When("click alert box ok true", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 20
            testRunner.Then("the number of rows in grid Supplies should be 11", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }

        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("5.6.2 The supply inventory page shall include")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "InventoryManagementDononrSupplies")]
        public virtual void _5_6_2TheSupplyInventoryPageShallInclude()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("5.6.2 The supply inventory page shall include", ((string[])(null)));
#line 22
            this.ScenarioSetup(scenarioInfo);
#line 23
            testRunner.Given("Username MbtsMbTester1 logged in with password Prolacta99", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 24
            testRunner.When("user navigates to supplies", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 25
            testRunner.Then("the Supplies grid contains column Image Path", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 26
            testRunner.Then("the Supplies grid contains column Item Name", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 27
            testRunner.Then("the Supplies grid contains column Prolacta Part Number", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 28
            testRunner.Then("the Supplies grid contains column Supply Part Number", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }

        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("5.6.2.5 Ability to edit entries of supply inventory")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "InventoryManagementDononrSupplies")]
        public virtual void _5_6_2_5AbilityToEditEntriesOfSupplyInventory()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("5.6.2.5 Ability to edit entries of supply inventory", ((string[])(null)));
#line 30
            this.ScenarioSetup(scenarioInfo);
#line 31
            testRunner.Given("Username MbtsMbTester1 logged in with password Prolacta99", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 32
            testRunner.When("user navigates to supplies", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 33
            testRunner.And("element with id btnAddSupplies is clicked", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 34
            testRunner.And("text TestItem entered in ItemName", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 35
            testRunner.And("text 0122334444 entered in SupplyPartNumber", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 36
            testRunner.And("text 0122334444 entered in ProlactaPartNumber", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 37
            testRunner.And("element with class k-grid-update is clicked", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 38
            testRunner.Then("the 1 column in 1 row in Supplies grid should be TestItem", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 39
            testRunner.Then("the 2 column in 1 row in Supplies grid should be 0122334444", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 40
            testRunner.Then("the 3 column in 1 row in Supplies grid should be 0122334444", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 41
            testRunner.When("element with class k-grid-edit clicked in Supplies grid with row containing text " +
                               "TestItem", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 42
            testRunner.And("text TestItemUpdate entered in ItemName", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 43
            testRunner.And("text 1 entered in ProlactaPartNumber", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 44
            testRunner.And("text 0 entered in SupplyPartNumber", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 45
            testRunner.And("element with class k-grid-update is clicked", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 46
            testRunner.Then("the 1 column in row containing TestItemUpdate text in Supplies grid should be Tes" +
                               "tItemUpdate", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 47
            testRunner.Then("the 2 column in row containing TestItemUpdate text in Supplies grid should be 1", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 48
            testRunner.Then("the 3 column in row containing TestItemUpdate text in Supplies grid should be 0", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 49
            testRunner.When("element with class k-grid-delete clicked in Supplies grid with row containing tex" +
                               "t TestItemUpdate", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 50
            testRunner.Then("the alert text should be Are you sure you want to delete this record?", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 51
            testRunner.When("click alert box ok true", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 52
            testRunner.Then("the number of rows in grid Supplies should be 11", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }

        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("5.6.2.6 Ability to delete entries of supply inventory")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "InventoryManagementDononrSupplies")]
        public virtual void _5_6_2_6AbilityToDeleteEntriesOfSupplyInventory()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("5.6.2.6 Ability to delete entries of supply inventory", ((string[])(null)));
#line 54
            this.ScenarioSetup(scenarioInfo);
#line 55
            testRunner.Given("Username MbtsMbTester1 logged in with password Prolacta99", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 56
            testRunner.When("user navigates to supplies", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 57
            testRunner.And("element with id btnAddSupplies is clicked", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 58
            testRunner.And("text TestItem entered in ItemName", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 59
            testRunner.And("text 0122334444 entered in SupplyPartNumber", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 60
            testRunner.And("text 0122334444 entered in ProlactaPartNumber", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 61
            testRunner.And("element with class k-grid-update is clicked", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 62
            testRunner.Then("the 1 column in 1 row in Supplies grid should be TestItem", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 63
            testRunner.Then("the 2 column in 1 row in Supplies grid should be 0122334444", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 64
            testRunner.Then("the 3 column in 1 row in Supplies grid should be 0122334444", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 65
            testRunner.When("element with class k-grid-delete clicked in Supplies grid with row containing tex" +
                               "t TestItem", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 66
            testRunner.Then("the alert text should be Are you sure you want to delete this record?", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 67
            testRunner.When("click alert box ok true", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 68
            testRunner.Then("the number of rows in grid Supplies should be 11", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
