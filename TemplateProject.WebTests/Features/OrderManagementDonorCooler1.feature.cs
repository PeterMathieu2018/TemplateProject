// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.1.0.0
//      SpecFlow Generator Version:2.0.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace TemplateProject.WebTests.Features
{
    using TechTalk.SpecFlow;


    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.1.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class OrderManagementDonorCoolerFeature
    {

        private static TechTalk.SpecFlow.ITestRunner testRunner;

#line 1 "OrderManagementDonorCooler.feature"
#line hidden

        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner(null, 0);
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Order Management Donor Cooler", "\tIn order to manage Cooler orders\r\n\tAs a milk bank or warehouse user\r\n\tI want to " +
                    "be able to view, fulfill, verify, and print cooler packets", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }

        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }

        [Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()]
        public virtual void TestInitialize()
        {
            if (((testRunner.FeatureContext != null)
                        && (testRunner.FeatureContext.FeatureInfo.Title != "Order Management Donor Cooler")))
            {
                TemplateProject.WebTests.Features.OrderManagementDonorCoolerFeature.FeatureSetup(null);
            }
        }

        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }

        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }

        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }

        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("5.3.1 A table to show all Cooler Orders in any status for donors")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Order Management Donor Cooler")]
        public virtual void _5_3_1ATableToShowAllCoolerOrdersInAnyStatusForDonors()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("5.3.1 A table to show all Cooler Orders in any status for donors", ((string[])(null)));
#line 6
            this.ScenarioSetup(scenarioInfo);
#line 7
            testRunner.Given("Username MbtsMbTester1 logged in with password Prolacta99", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 8
            testRunner.When("user navigates to Order Management", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 9
            testRunner.And("element with id coolerTab is clicked", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 10
            testRunner.Then("element coolerTab has class k-state-active", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }

        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("5.3.2 An export feature to export the history view shall be added with current fi" +
            "lters")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Order Management Donor Cooler")]
        public virtual void _5_3_2AnExportFeatureToExportTheHistoryViewShallBeAddedWithCurrentFilters()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("5.3.2 An export feature to export the history view shall be added with current fi" +
                    "lters", ((string[])(null)));
#line 12
            this.ScenarioSetup(scenarioInfo);
#line 13
            testRunner.Given("Username MbtsMbTester1 logged in with password Prolacta99", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 14
            testRunner.When("user navigates to Order Management", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 15
            testRunner.And("element with id coolerTab is clicked", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 16
            testRunner.Then("element coolerTab has class k-state-active", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 17
            testRunner.When("element with class k-grid-excel is clicked", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 18
            testRunner.Then("file with name Cooler Order Export was exported", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }

        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("5.3.3 User may also filter order table by every category except Donor Name and Ou" +
            "tgoing Tracking Number")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Order Management Donor Cooler")]
        public virtual void _5_3_3UserMayAlsoFilterOrderTableByEveryCategoryExceptDonorNameAndOutgoingTrackingNumber()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("5.3.3 User may also filter order table by every category except Donor Name and Ou" +
                    "tgoing Tracking Number", ((string[])(null)));
#line 20
            this.ScenarioSetup(scenarioInfo);
#line 21
            testRunner.Given("Username MbtsMbTester1 logged in with password Prolacta99", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 22
            testRunner.When("cooler order is created", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 23
            testRunner.When("user navigates to Order Management", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 24
            testRunner.And("filter 60002 in column DonorID in grid coolerOrdersGrid", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 25
            testRunner.Then("the 2 column in 1 row in coolerOrdersGrid grid should be 60002", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 26
            testRunner.When("filter on grid coolerOrdersGrid is cleared", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 27
            testRunner.And("filter Tiny Treasures Milk Bank in column MilkBankName in grid coolerOrdersGrid", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 28
            testRunner.Then("the 4 column in 1 row in coolerOrdersGrid grid should be Tiny Treasures Milk Bank" +
                               "", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 29
            testRunner.When("filter on grid coolerOrdersGrid is cleared", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 30
            testRunner.And("filter mbtsmbtester1 in column OrderBy in grid coolerOrdersGrid", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 31
            testRunner.Then("the 9 column in 1 row in coolerOrdersGrid grid should be mbtsmbtester1", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 32
            testRunner.When("filter on grid coolerOrdersGrid is cleared", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 33
            testRunner.And("filter Pending in column Status in grid coolerOrdersGrid", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 34
            testRunner.Then("the 10 column in 1 row in coolerOrdersGrid grid should be Pending", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }

        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("5.3.3.1 Filter by Print Date")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Order Management Donor Cooler")]
        public virtual void _5_3_3_1FilterByPrintDate()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("5.3.3.1 Filter by Print Date", ((string[])(null)));
#line 36
            this.ScenarioSetup(scenarioInfo);
#line 37
            testRunner.Given("Username MbtsMbTester1 logged in with password Prolacta99", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 38
            testRunner.When("cooler order is created", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 39
            testRunner.And("cooler order is created", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 40
            testRunner.And("cooler packet is printed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 41
            testRunner.And("filter currentDate in column DatePrinted in grid coolerOrdersGrid", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 42
            testRunner.Then("the 11 column in 1 row in coolerOrdersGrid grid should be currentDate", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }

        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("5.3.4 User may also filter Cooler Order Management through Donor ID Search Bar")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Order Management Donor Cooler")]
        public virtual void _5_3_4UserMayAlsoFilterCoolerOrderManagementThroughDonorIDSearchBar()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("5.3.4 User may also filter Cooler Order Management through Donor ID Search Bar", ((string[])(null)));
#line 44
            this.ScenarioSetup(scenarioInfo);
#line 45
            testRunner.Given("Username MbtsMbTester1 logged in with password Prolacta99", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 46
            testRunner.When("user navigates to Order Management", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 47
            testRunner.And("text 60002 entered in searchOrderId", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 48
            testRunner.And("element with id searchDonorID is clicked", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 49
            testRunner.Then("the 2 column in 1 row in coolerOrdersGrid grid should be 60002", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }

        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("5.3.4.1 User will be able to see all cooler orders for a donor")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Order Management Donor Cooler")]
        public virtual void _5_3_4_1UserWillBeAbleToSeeAllCoolerOrdersForADonor()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("5.3.4.1 User will be able to see all cooler orders for a donor", ((string[])(null)));
#line 51
            this.ScenarioSetup(scenarioInfo);
#line 52
            testRunner.Given("Username MbtsMbTester1 logged in with password Prolacta99", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 53
            testRunner.When("user navigates to Order Management", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 54
            testRunner.And("filter 60002 in column DonorID in grid coolerOrdersGrid", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 55
            testRunner.Then("the 2 column in 1 row in coolerOrdersGrid grid should be 60002", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }

        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("5.3.4.2 User may also select each cooler order individually for the donor")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Order Management Donor Cooler")]
        public virtual void _5_3_4_2UserMayAlsoSelectEachCoolerOrderIndividuallyForTheDonor()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("5.3.4.2 User may also select each cooler order individually for the donor", ((string[])(null)));
#line 57
            this.ScenarioSetup(scenarioInfo);
#line 58
            testRunner.Given("Username MbtsMbTester1 logged in with password Prolacta99", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 59
            testRunner.When("cooler order is created", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 60
            testRunner.And("user navigates to Order Management", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 61
            testRunner.And("filter Pending in column Status in grid coolerOrdersGrid", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 62
            testRunner.And("element with class k-i-expand clicked in coolerOrdersGrid grid with row containin" +
                               "g text Pending", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }

        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("5.3.5 Checkbox option present for each cooler order The user will be able to mark" +
            " the option as checked")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Order Management Donor Cooler")]
        public virtual void _5_3_5CheckboxOptionPresentForEachCoolerOrderTheUserWillBeAbleToMarkTheOptionAsChecked()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("5.3.5 Checkbox option present for each cooler order The user will be able to mark" +
                    " the option as checked", ((string[])(null)));
#line 64
            this.ScenarioSetup(scenarioInfo);
#line 65
            testRunner.Given("Username MbtsMbTester1 logged in with password Prolacta99", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 66
            testRunner.When("cooler order is created", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 67
            testRunner.And("cooler order is created", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 68
            testRunner.And("cooler packet is printed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 69
            testRunner.And("filter 60002 in column DonorID in grid coolerOrdersGrid", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 70
            testRunner.Then("the 2 column in 1 row in coolerOrdersGrid grid should be 60002", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 71
            testRunner.When("element with class checkbox clicked in coolerOrdersGrid grid with row containing " +
                               "text Erin Povich", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 72
            testRunner.Then("element with class checkbox has attribute checked equal to true in coolerOrdersGr" +
                               "id grid with row with text Erin Povich", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }

        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("5.3.6 An option to Print Cooler Packets")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Order Management Donor Cooler")]
        public virtual void _5_3_6AnOptionToPrintCoolerPackets()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("5.3.6 An option to Print Cooler Packets", ((string[])(null)));
#line 74
            this.ScenarioSetup(scenarioInfo);
#line 75
            testRunner.Given("Username MbtsMbTester1 logged in with password Prolacta99", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 76
            testRunner.When("cooler order is created", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 77
            testRunner.And("cooler order is created", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 78
            testRunner.And("user navigates to Order Management", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 79
            testRunner.And("row containing text Not Printed in grid coolerOrdersGrid is clicked", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 80
            testRunner.And("element with id printPackets is clicked", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 81
            testRunner.And("switch to new tab", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 82
            testRunner.Then("the page Order/CoolerPacket should be displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }

        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("5.3.6.1.1 Total Count of cooler orders shall be displayed for the coolers being s" +
            "elected")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Order Management Donor Cooler")]
        public virtual void _5_3_6_1_1TotalCountOfCoolerOrdersShallBeDisplayedForTheCoolersBeingSelected()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("5.3.6.1.1 Total Count of cooler orders shall be displayed for the coolers being s" +
                    "elected", ((string[])(null)));
#line 84
            this.ScenarioSetup(scenarioInfo);
#line 85
            testRunner.Given("Username MbtsMbTester1 logged in with password Prolacta99", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 86
            testRunner.When("user navigates to Order Management", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 87
            testRunner.And("filter null in column DatePrinted in grid coolerOrdersGrid", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 88
            testRunner.And("row containing text Not Printed in grid coolerOrdersGrid is clicked", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 89
            testRunner.Then("element with id printPackets has value Print Cooler Packets (2)", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }

        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("5.3.7 User has the option to filter by Cooler Order Statuses")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Order Management Donor Cooler")]
        public virtual void _5_3_7UserHasTheOptionToFilterByCoolerOrderStatuses()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("5.3.7 User has the option to filter by Cooler Order Statuses", ((string[])(null)));
#line 91
            this.ScenarioSetup(scenarioInfo);
#line 92
            testRunner.Given("Username MbtsMbTester1 logged in with password Prolacta99", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 93
            testRunner.When("cooler order is created", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 94
            testRunner.And("user navigates to Order Management", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 95
            testRunner.And("filter Pending in column Status in grid coolerOrdersGrid", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 96
            testRunner.Then("the 10 column in 1 row in coolerOrdersGrid grid should be Pending", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 100
            testRunner.When("filter on grid coolerOrdersGrid is cleared", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 101
            testRunner.And("cooler order fulfilled 60002", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 102
            testRunner.And("filter Fulfilled in column Status in grid coolerOrdersGrid", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 103
            testRunner.Then("the 10 column in 1 row in coolerOrdersGrid grid should be Fulfilled", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 104
            testRunner.When("filter on grid coolerOrdersGrid is cleared", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 105
            testRunner.And("cooler order verified 60002", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 106
            testRunner.And("filter OK in column Status in grid coolerOrdersGrid", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 107
            testRunner.Then("the 10 column in 1 row in coolerOrdersGrid grid should be OK", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }

        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("5.3.8 A list of all Cooler orders shall include")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Order Management Donor Cooler")]
        public virtual void _5_3_8AListOfAllCoolerOrdersShallInclude()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("5.3.8 A list of all Cooler orders shall include", ((string[])(null)));
#line 109
            this.ScenarioSetup(scenarioInfo);
#line 110
            testRunner.Given("Username MbtsMbTester1 logged in with password Prolacta99", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 111
            testRunner.When("user navigates to Order Management", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 112
            testRunner.Then("the coolerOrdersGrid grid contains column Order #", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 113
            testRunner.Then("the coolerOrdersGrid grid contains column Donor ID", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 114
            testRunner.Then("the coolerOrdersGrid grid contains column Milk Bank Name", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 115
            testRunner.Then("the coolerOrdersGrid grid contains column Order Date", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 116
            testRunner.Then("the coolerOrdersGrid grid contains column Shipping Date", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 117
            testRunner.Then("the coolerOrdersGrid grid contains column Out Tracking", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 118
            testRunner.Then("the coolerOrdersGrid grid contains column Return Date", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 119
            testRunner.Then("the coolerOrdersGrid grid contains column Ordered By", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 120
            testRunner.Then("the coolerOrdersGrid grid contains column Status", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }

        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("5.3.8.10.1 User can edit Donor ID name address email Milk Bank phone notes if not" +
            " fulfilled")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Order Management Donor Cooler")]
        public virtual void _5_3_8_10_1UserCanEditDonorIDNameAddressEmailMilkBankPhoneNotesIfNotFulfilled()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("5.3.8.10.1 User can edit Donor ID name address email Milk Bank phone notes if not" +
                    " fulfilled", ((string[])(null)));
#line 122
            this.ScenarioSetup(scenarioInfo);
#line 123
            testRunner.Given("Username MbtsMbTester1 logged in with password Prolacta99", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 124
            testRunner.When("user navigates to Order Management", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 125
            testRunner.And("filter Pending in column Status in grid coolerOrdersGrid", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 126
            testRunner.And("element with class k-grid-Edit clicked in coolerOrdersGrid grid with row containi" +
                               "ng text Pending", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 127
            testRunner.Then("the page Order/EditOrder should be displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 128
            testRunner.When("text 60002 entered in Order_DonorID", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 129
            testRunner.And("element with id updateDonorInfo is clicked", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 130
            testRunner.Then("the dropdown MilkBank has selected value Tiny Treasures Milk Bank", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 131
            testRunner.Then("element with id FirstName has value Erin", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 132
            testRunner.Then("element with id LastName has value Povich", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 133
            testRunner.Then("element with id Street has value 309 Cimarron Valley Trail", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 134
            testRunner.Then("element with id State has value MO", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 135
            testRunner.Then("element with id ZipCode has value 63385", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 136
            testRunner.Then("element with id Email has value erinpovich@yahoo.com", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 137
            testRunner.Then("element with id PhoneNumber has value (314)-803-6875", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 138
            testRunner.When("text Test Note Edit entered in Order_Notes", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 139
            testRunner.Then("element with id Order_Notes has value Test Note Edit", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 140
            testRunner.When("element with id btnUpdateOrder is clicked", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 141
            testRunner.Then("the page Order/OrderDetail should be displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 142
            testRunner.Then("element with id donorId has text 60002", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 143
            testRunner.Then("element with id milkBank has text Tiny Treasures Milk Bank", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 144
            testRunner.Then("element with id firstName has text Erin", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 145
            testRunner.Then("element with id lastName has text Povich", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 146
            testRunner.Then("element with id street has text 309 Cimarron Valley Trail", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 147
            testRunner.Then("element with id state has text MO", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 148
            testRunner.Then("element with id zipCode has text 63385", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 149
            testRunner.Then("element with id email has text erinpovich@yahoo.com", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 150
            testRunner.Then("element with id phoneNumber has text (314)-803-6875", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 151
            testRunner.Then("element with id orderNotes has text Test Note Edit", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }

        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("5.3.8.10.2\tIf order is fulfilled, Donor ID, Shipping Information, Outgoing Tracki" +
            "ng and Return Tracking Label cannot be edited")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Order Management Donor Cooler")]
        public virtual void _5_3_8_10_2IfOrderIsFulfilledDonorIDShippingInformationOutgoingTrackingAndReturnTrackingLabelCannotBeEdited()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("5.3.8.10.2\tIf order is fulfilled, Donor ID, Shipping Information, Outgoing Tracki" +
                    "ng and Return Tracking Label cannot be edited", ((string[])(null)));
#line 153
            this.ScenarioSetup(scenarioInfo);
#line 154
            testRunner.Given("Username MbtsMbTester1 logged in with password Prolacta99", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 155
            testRunner.When("user navigates to Order Management", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 156
            testRunner.And("filter Fulfilled in column Status in grid coolerOrdersGrid", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 157
            testRunner.And("element with class k-grid-Edit clicked in coolerOrdersGrid grid with row containi" +
                               "ng text Fulfilled", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 158
            testRunner.Then("the page Order/EditOrder should be displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 159
            testRunner.Then("element with id Order_DonorID has attribute readonly with value true", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 160
            testRunner.Then("element with id updateDonorInfo has attribute readonly with value true", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 161
            testRunner.Then("element with id MilkBank has attribute disabled with value true", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 162
            testRunner.Then("element with id FirstName has attribute readonly with value true", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 163
            testRunner.Then("element with id Street has attribute readonly with value true", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 164
            testRunner.Then("element with id City has attribute readonly with value true", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 165
            testRunner.Then("element with id State has attribute readonly with value true", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 166
            testRunner.Then("element with id ZipCode has attribute readonly with value true", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 167
            testRunner.Then("element with id Email has attribute readonly with value true", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 168
            testRunner.Then("element with id PhoneNumber has attribute readonly with value true", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 169
            testRunner.Then("element with id OutgoingTracking has attribute readonly with value true", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 170
            testRunner.Then("element with id ReturnTracking has attribute readonly with value true", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }

        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("5.3.8.10.3\tThe user may edit supplies quantity in Cooler Order if an order is not" +
            " fulfilled.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Order Management Donor Cooler")]
        public virtual void _5_3_8_10_3TheUserMayEditSuppliesQuantityInCoolerOrderIfAnOrderIsNotFulfilled_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("5.3.8.10.3\tThe user may edit supplies quantity in Cooler Order if an order is not" +
                    " fulfilled.", ((string[])(null)));
#line 172
            this.ScenarioSetup(scenarioInfo);
#line 173
            testRunner.Given("Username MbtsMbTester1 logged in with password Prolacta99", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 174
            testRunner.When("cooler order is created", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 175
            testRunner.And("user navigates to Order Management", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 176
            testRunner.And("filter Pending in column Status in grid coolerOrdersGrid", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 177
            testRunner.And("element with class k-grid-Edit clicked in coolerOrdersGrid grid with row containi" +
                               "ng text Pending", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 178
            testRunner.Then("the page Order/EditOrder should be displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 179
            testRunner.When("value 2 entered in numeric with DoublePumpingKit id", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 180
            testRunner.And("value 2 entered in numeric with 24mmBreastshields id", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 181
            testRunner.And("value 2 entered in numeric with 27mmBreastshields id", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 182
            testRunner.And("value 2 entered in numeric with 30mmBreastshields id", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 183
            testRunner.And("value 2 entered in numeric with 8ozBottlesSet id", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 184
            testRunner.And("value 2 entered in numeric with PersonalFitConnectors id", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 185
            testRunner.And("value 2 entered in numeric with ValvesandMembranes id", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 186
            testRunner.And("value 2 entered in numeric with Membranes id", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 187
            testRunner.And("value 2 entered in numeric with Tubing id", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 188
            testRunner.And("value 2 entered in numeric with Bags id", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 189
            testRunner.And("value 2 entered in numeric with YellowBag id", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 190
            testRunner.Then("numeric with id DoublePumpingKit has value 2", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 191
            testRunner.Then("numeric with id 24mmBreastshields has value 2", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 192
            testRunner.Then("numeric with id 27mmBreastshields has value 2", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 193
            testRunner.Then("numeric with id 30mmBreastshields has value 2", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 194
            testRunner.Then("numeric with id 8ozBottlesSet has value 2", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 195
            testRunner.Then("numeric with id PersonalFitConnectors has value 2", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 196
            testRunner.Then("numeric with id ValvesandMembranes has value 2", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 197
            testRunner.Then("numeric with id Membranes has value 2", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 198
            testRunner.Then("numeric with id Tubing has value 2", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 199
            testRunner.Then("numeric with id Bags has value 2", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 200
            testRunner.Then("numeric with id Tubing has value 2", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 201
            testRunner.Then("numeric with id YellowBag has value 2", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }

        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("5.3.8.10.5\tReplacement Tracking number can edited at any time")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Order Management Donor Cooler")]
        public virtual void _5_3_8_10_5ReplacementTrackingNumberCanEditedAtAnyTime()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("5.3.8.10.5\tReplacement Tracking number can edited at any time", ((string[])(null)));
#line 205
            this.ScenarioSetup(scenarioInfo);
#line 206
            testRunner.Given("Username MbtsMbTester1 logged in with password Prolacta99", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 207
            testRunner.When("cooler order is created", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 208
            testRunner.When("user navigates to Order Management", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 209
            testRunner.And("filter Pending in column Status in grid coolerOrdersGrid", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 210
            testRunner.And("element with class k-grid-Edit clicked in coolerOrdersGrid grid with row containi" +
                               "ng text Pending", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 211
            testRunner.Then("the page Order/EditOrder should be displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 212
            testRunner.When("text 1223-3344-4455 entered in ReplacementTracking", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 213
            testRunner.Then("element with id ReplacementTracking has value 1223-3344-4455", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 214
            testRunner.When("user navigates to Order Management", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 215
            testRunner.And("cooler order fulfilled 60002", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 216
            testRunner.And("filter Fulfilled in column Status in grid coolerOrdersGrid", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 217
            testRunner.And("element with class k-grid-Edit clicked in coolerOrdersGrid grid with row containi" +
                               "ng text Fulfilled", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 218
            testRunner.Then("the page Order/EditOrder should be displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 219
            testRunner.When("text 1223-3344-4455 entered in ReplacementTracking", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 220
            testRunner.Then("element with id ReplacementTracking has value 1223-3344-4455", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 221
            testRunner.When("user navigates to Order Management", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 222
            testRunner.And("cooler order verified 60002", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 223
            testRunner.And("filter OK in column Status in grid coolerOrdersGrid", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 224
            testRunner.And("element with class k-grid-Edit clicked in coolerOrdersGrid grid with row containi" +
                               "ng text OK", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 225
            testRunner.Then("the page Order/EditOrder should be displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 226
            testRunner.When("text 1223-3344-4455 entered in ReplacementTracking", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 227
            testRunner.Then("element with id ReplacementTracking has value 1223-3344-4455", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }

        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("5.3.9 More order information shall be available when the order is clicked on and " +
            "will contain the following information")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Order Management Donor Cooler")]
        public virtual void _5_3_9MoreOrderInformationShallBeAvailableWhenTheOrderIsClickedOnAndWillContainTheFollowingInformation()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("5.3.9 More order information shall be available when the order is clicked on and " +
                    "will contain the following information", ((string[])(null)));
#line 235
            this.ScenarioSetup(scenarioInfo);
#line 236
            testRunner.Given("Username MbtsMbTester1 logged in with password Prolacta99", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 237
            testRunner.When("cooler order is created", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 238
            testRunner.And("user navigates to Order Management", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 239
            testRunner.And("element with class k-i-expand clicked in coolerOrdersGrid grid with row containin" +
                               "g text 60002", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 240
            testRunner.Then("element with class orders is visible", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }

        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("5.3.9.1 Order Items")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Order Management Donor Cooler")]
        public virtual void _5_3_9_1OrderItems()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("5.3.9.1 Order Items", ((string[])(null)));
#line 242
            this.ScenarioSetup(scenarioInfo);
#line 243
            testRunner.Given("Username MbtsMbTester1 logged in with password Prolacta99", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 244
            testRunner.When("cooler order is created", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 245
            testRunner.And("user navigates to Order Management", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 246
            testRunner.And("element with class k-i-expand clicked in coolerOrdersGrid grid with row containin" +
                               "g text 60002", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 247
            testRunner.Then("element with class orders is visible", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }

        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("5.3.9.2 Shipping")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Order Management Donor Cooler")]
        public virtual void _5_3_9_2Shipping()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("5.3.9.2 Shipping", ((string[])(null)));
#line 249
            this.ScenarioSetup(scenarioInfo);
#line 250
            testRunner.Given("Username MbtsMbTester1 logged in with password Prolacta99", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 251
            testRunner.When("user navigates to Order Management", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 252
            testRunner.And("element with class k-i-expand clicked in coolerOrdersGrid grid with row containin" +
                               "g text Fulfilled", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 253
            testRunner.Then("element with class orders is visible", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 254
            testRunner.When("element with id CoolerShippingTab is clicked", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 255
            testRunner.Then("element CoolerShippingTab has class k-state-active", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
